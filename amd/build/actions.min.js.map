{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// Part of Moodle - AI4Teachers block\n/**\n * Copy / download / send actions for generated prompt.\n * @module block_aipromptgen/actions\n */\nimport {getString} from 'core/str';\n\nconst $ = (sel, root = document) => root.querySelector(sel);\n\n/**\n * Attach copy / download / send handlers for the generated prompt result.\n */\nexport const attachCopyDownload = () => {\n    const copyBtn = $('#ai4t-copy');\n    const dlBtn = $('#ai4t-download');\n    const sendBtn = $('#ai4t-sendtochat');\n    const ta = $('#ai4t-generated');\n    const form = document.querySelector('form.mform');\n    const copied = $('#ai4t-copied');\n\n    copyBtn?.addEventListener('click', () => {\n        if (!ta) {\n            return;\n        }\n        ta.select();\n        ta.setSelectionRange(0, ta.value.length);\n        const copyPromise = navigator.clipboard?.writeText\n            ? navigator.clipboard.writeText(ta.value)\n            : Promise.resolve(document.execCommand('copy'));\n        copyPromise.catch(() => {\n            // Ignore copy failure silently.\n        });\n        if (copied) {\n            void getString('form:copied', 'block_aipromptgen').then(str => {\n                copied.textContent = str;\n                copied.style.display = 'inline';\n                setTimeout(() => {\n                    copied.style.display = 'none';\n                }, 1500);\n                return true;\n            });\n        }\n    });\n\n    dlBtn?.addEventListener('click', () => {\n        if (!ta) {\n            return;\n        }\n        const title = document.querySelector('title')?.textContent || 'prompt';\n        const slug = title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '');\n        const blob = new Blob([ta.value || ''], {type: 'text/plain'});\n        const a = document.createElement('a');\n        a.href = URL.createObjectURL(blob);\n        a.download = `${slug}-ai-prompt.txt`;\n        document.body.appendChild(a);\n        a.click();\n        setTimeout(() => {\n            URL.revokeObjectURL(a.href);\n            a.remove();\n        }, 0);\n    });\n\n    sendBtn?.addEventListener('click', () => {\n        if (!form) {\n            return;\n        }\n        const i = document.createElement('input');\n        i.type = 'hidden';\n        i.name = 'sendtochat';\n        i.value = '1';\n        form.appendChild(i);\n        form.submit();\n    });\n};\n"],"names":["$","sel","root","document","querySelector","copyBtn","dlBtn","sendBtn","ta","form","copied","addEventListener","select","setSelectionRange","value","length","navigator","clipboard","writeText","Promise","resolve","execCommand","catch","then","str","textContent","style","display","setTimeout","slug","toLowerCase","replace","blob","Blob","type","a","createElement","href","URL","createObjectURL","download","body","appendChild","click","revokeObjectURL","remove","i","name","submit"],"mappings":"oLAOMA,EAAI,SAACC,SAAKC,4DAAOC,gBAAaD,KAAKE,cAAcH,kCAKrB,WACxBI,QAAUL,EAAE,cACZM,MAAQN,EAAE,kBACVO,QAAUP,EAAE,oBACZQ,GAAKR,EAAE,mBACPS,KAAON,SAASC,cAAc,cAC9BM,OAASV,EAAE,gBAEjBK,MAAAA,SAAAA,QAASM,iBAAiB,SAAS,kCAC1BH,UAGLA,GAAGI,SACHJ,GAAGK,kBAAkB,EAAGL,GAAGM,MAAMC,sCACbC,UAAUC,gEAAWC,UACnCF,UAAUC,UAAUC,UAAUV,GAAGM,OACjCK,QAAQC,QAAQjB,SAASkB,YAAY,UAC/BC,OAAM,SAGdZ,SACK,kBAAU,cAAe,qBAAqBa,MAAKC,MACpDd,OAAOe,YAAcD,IACrBd,OAAOgB,MAAMC,QAAU,SACvBC,YAAW,KACPlB,OAAOgB,MAAMC,QAAU,SACxB,OACI,QAKnBrB,MAAAA,OAAAA,MAAOK,iBAAiB,SAAS,mCACxBH,gBAICqB,qCADQ1B,SAASC,cAAc,uEAAUqB,cAAe,UAC3CK,cAAcC,QAAQ,cAAe,KAAKA,QAAQ,WAAY,IAC3EC,KAAO,IAAIC,KAAK,CAACzB,GAAGM,OAAS,IAAK,CAACoB,KAAM,eACzCC,EAAIhC,SAASiC,cAAc,KACjCD,EAAEE,KAAOC,IAAIC,gBAAgBP,MAC7BG,EAAEK,mBAAcX,uBAChB1B,SAASsC,KAAKC,YAAYP,GAC1BA,EAAEQ,QACFf,YAAW,KACPU,IAAIM,gBAAgBT,EAAEE,MACtBF,EAAEU,WACH,MAGPtC,MAAAA,SAAAA,QAASI,iBAAiB,SAAS,SAC1BF,kBAGCqC,EAAI3C,SAASiC,cAAc,SACjCU,EAAEZ,KAAO,SACTY,EAAEC,KAAO,aACTD,EAAEhC,MAAQ,IACVL,KAAKiC,YAAYI,GACjBrC,KAAKuC"}