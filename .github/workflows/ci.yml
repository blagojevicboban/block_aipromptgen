name: Moodle Plugin CI

on:
  push:
    paths:
      - 'blocks/aipromptgen/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'blocks/aipromptgen/**'
      - '.github/workflows/ci.yml'
  workflow_dispatch:

concurrency:
  group: plugin-aipromptgen-${{ github.ref }}
  cancel-in-progress: true

jobs:
  moodle-plugin-ci:
    name: PHP ${{ matrix.php }} / ${{ matrix.moodle }} / ${{ matrix.db }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: moodle
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2']
        moodle: ['MOODLE_500_STABLE','MOODLE_500_STABLE','master']
        db: ['mysqli']

    env:
      DB: ${{ matrix.db }}
      MOODLE_BRANCH: ${{ matrix.moodle }}
      PHP_VERSION: ${{ matrix.php }}
      IGNORE_PATHS: ''
      PLUGIN_DIR: blocks/aipromptgen

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          extensions: gd, intl, zip, curl, xml, mbstring
          tools: composer

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install moodle-plugin-ci
        run: |
          composer global require moodlehq/moodle-plugin-ci:^4
          echo "${HOME}/.composer/vendor/bin" >> $GITHUB_PATH

      - name: Install Moodle + plugin
        run: |
          moodle-plugin-ci install --plugin $PLUGIN_DIR --db-host=127.0.0.1 --db-user=root --db-pass=root --db-name=moodle

      - name: PHP Lint
        run: moodle-plugin-ci phplint $PLUGIN_DIR

      - name: Code style (PHPCS)
        run: moodle-plugin-ci phpcs $PLUGIN_DIR || true

      - name: Static analysis (PHPDoc / duplicate / mess detection)
        run: |
          moodle-plugin-ci phpdoc $PLUGIN_DIR || true
          moodle-plugin-ci phpcpd $PLUGIN_DIR || true
          moodle-plugin-ci phpmd $PLUGIN_DIR || true

      - name: Validate lang strings
        run: moodle-plugin-ci langstring $PLUGIN_DIR || true

      - name: Validate plugin (meta checks)
        run: moodle-plugin-ci validate $PLUGIN_DIR

      - name: PHPUnit (if tests present)
        run: |
          if [ -d "$PLUGIN_DIR/tests" ]; then
            moodle-plugin-ci phpunit $PLUGIN_DIR; else echo "No PHPUnit tests"; fi

      - name: Behat (if scenarios present)
        run: |
          if compgen -G "$PLUGIN_DIR/tests/behat/*.feature" > /dev/null; then
            moodle-plugin-ci behat --profile=chrome $PLUGIN_DIR; else echo "No Behat features"; fi

      - name: Summarise reports
        if: always()
        run: |
          echo "Code style exit (ignored failures):" >> $GITHUB_STEP_SUMMARY
          echo "See artifacts for detailed PHPCS report if failures occurred." >> $GITHUB_STEP_SUMMARY

      - name: Upload artifacts (reports)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ matrix.php }}-${{ matrix.moodle }}
          path: |
            work/*/moodledata/temp/tool_plugin_ci/*
            work/*/moodle/vendor/bin/phpunit
          if-no-files-found: ignore

  phpcs-strict:
    name: PHPCS strict (fails build on style errors)
    runs-on: ubuntu-latest
    needs: moodle-plugin-ci
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: none
          tools: composer
      - name: Install moodle-plugin-ci
        run: |
          composer global require moodlehq/moodle-plugin-ci:^4
          echo "${HOME}/.composer/vendor/bin" >> $GITHUB_PATH
      - name: Install Moodle minimal
        run: moodle-plugin-ci install --skip-init --plugin blocks/aipromptgen --moodle=MOODLE_500_STABLE --db-host=127.0.0.1 --db-user=root --db-pass=root --db-name=moodle
      - name: PHPCS strict
        run: moodle-plugin-ci phpcs blocks/aipromptgen

# Notes:
# - Adjust MOODLE_BRANCH values as new stable branches are released.
# - Add more PHP versions to the matrix when required.
# - Behat is conditional; it runs only if feature files exist.
